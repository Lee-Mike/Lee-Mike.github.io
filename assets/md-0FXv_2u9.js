import{b as a,o as i,w as s,g as t,v as o,x as u,S as e}from"./modules/vue-C1lp3Ci0.js";import{I as d}from"./slidev/default-Dm8mRLkf.js";import{u as c,f as p}from"./slidev/context-BM7Kszty.js";import"./index-d7PUQqOg.js";import"./modules/shiki-DHNGtW2h.js";const _={__name:"slides.md__slidev_8",setup(m){const{$clicksContext:n,$frontmatter:r}=c();return n.setup(),(g,l)=>(i(),a(d,o(u(e(p)(e(r),7))),{default:s(()=>l[0]||(l[0]=[t("h2",null,"NLP Techniques Applied",-1),t("table",null,[t("thead",null,[t("tr",null,[t("th",null,[t("strong",null,"Step")]),t("th",null,[t("strong",null,"Technique")]),t("th",null,[t("strong",null,"Purpose")])])]),t("tbody",null,[t("tr",null,[t("td",null,"Text Preprocessing"),t("td",null,"Cleaning and normalization"),t("td",null,"Standardize text for analysis")]),t("tr",null,[t("td",null,"Chinese Word Segmentation"),t("td",null,"Jieba tokenizer"),t("td",null,"Tokenize sentences and extract domain terms")]),t("tr",null,[t("td",null,"MinHash Signature Generation"),t("td",null,"MinHashing based on character sets"),t("td",null,"Compact representation of text diversity")]),t("tr",null,[t("td",null,"Approximate Nearest Neighbor"),t("td",null,"Locality Sensitive Hashing (LSH) for Jaccard"),t("td",null,"Fast retrieval of similar responses")]),t("tr",null,[t("td",null,"Similarity Scoring"),t("td",null,"Average Jaccard similarity with nearest neighbors"),t("td",null,"Quantify template-likeness")]),t("tr",null,[t("td",null,"Feature Scaling"),t("td",null,"MinMaxScaler"),t("td",null,"Normalize linguistic complexity, politeness, domain-specificity")])])],-1)])),_:1},16))}};export{_ as default};
